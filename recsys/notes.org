* Error Metric
  RMSE
  Top = ~1.20
  predict # of stars for each (user_id, business_id) pair
* Key Points from Netflix Papers
** 8/38/92 [fn:1]
   30 neighbors kNN on residuals of non-regularized NSVD1 with k=200
   50 neighbors kNN on 200-unit RBM
   SimuFctr (40 factors), adaptive user factors by [MseSim] with <User-kNN on all global effects but the last 4>
** 8/38/64 [fn:1]
   30 neighbors kNN on residuals of non-regularized NSVD1 with k=200
   50 neighbors kNN on 200-unit RBM
   NNMF (128 factors), adaptive user factors by [MseSim]
** Blending
*** Bucket by support
*** Separate OLS model per bucket
*** Or, bucket randomly and average coefs
** Asymmetric Factor Models
** Regression
** RBM-Gaussian
** RBM
** Matrix Factorization
** kNN
** Binarized Matrix Fact
** Series trained on residuals
** Similarity Scores
*** EditSim [fn:1]
* TODO
** RBMs
** Matrix Factorization or SVD++
** Koren Integrated
** Data
*** Separate Model per geographic state
*** Latent (binary reviews)
*** Test reviews 60/33/6 in user_data
*** Train reviews 94/0/6 in user_data
*** Test reviews 53/47 in bus_data
*** Train reviews 100/0 in bus_data
** Add in content features
*** ignore review content for now
*** ignore checkin content for now
*** user: review_count, average_stars (user when missing bias?), votes
*** business: stars, address/lat/lng/name/state/city, review_count, open, categories
*** user preferences for certain geographies (etc.) - rf?
* Footnotes

[fn:1] BellKorenVolinsky2008
